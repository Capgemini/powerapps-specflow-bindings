jobs: 
  - job: BuildJob
    variables:
      - name: GitVersion.SemVer
        value: ''
      - group: Cap Dev - CI
      - name: solution
        value: '**/*.sln'
      - name: buildPlatform
        value: 'Any CPU'
      - name: buildConfiguration
        value: 'Release'
    # build and tests executed in single job in order to allow SonarCloud to capture coverage
    displayName: Build and Test
    timeoutInMinutes: 180 
    steps:
      - task: gitversion/setup@0
        displayName: Install GitVersion
        inputs:
          versionSpec: '5.x'
      - task: gitversion/execute@0
        displayName: Execute GitVersion
        inputs:
          useConfigFile: true
          configFilePath: '$(Build.SourcesDirectory)\GitVersion.yml'
          updateAssemblyInfo: false
      - pwsh: Write-Host "##vso[task.setvariable variable=SemVer;isOutput=true]$(GitVersion.SemVer)"
        name: OutputSemVerTask
      - task: DotNetCoreCLI@2
        displayName: Restore NuGet packages
        inputs:
          command: restore
          projects: '**/*.csproj'
      - task: Npm@1
        displayName: Restore npm packages
        inputs:
          verbose: false
          workingDir: driver
      - task: SonarCloudPrepare@1
        displayName: Prepare SonarCloud
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'capgemini-1'
          scannerMode: 'MSBuild'
          projectKey: 'Capgemini_powerapps-specflow-bindings'
          projectName: 'powerapps-specflow-bindings'
          projectVersion: '$(GitVersion.SemVer)'
          extraProperties: |
            sonar.javascript.lcov.reportPaths=driver/test_results/coverage/lcov/lcov.info
            sonar.coverage.exclusions=**\*spec.ts, bindings/tests/**/*
            sonar.eslint.reportPaths=$(Build.SourcesDirectory)/driver/test_results/analysis/eslint.json
      - task: VSBuild@1
        displayName: Build solution
        inputs:
          solution: '$(solution)'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
      - task: Npm@1
        displayName: Run unit tests
        inputs:
          command: custom
          verbose: false
          customCommand: run test:ci
          publishRegistry: useFeed
          workingDir: driver
      - task: PublishTestResults@2
        displayName: Publish unit test results
        inputs:
          testResultsFiles: driver\test_results\reports\TESTS-*.xml
      - task: PublishCodeCoverageResults@1
        displayName: Publish unit code coverage results
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: driver/test_results/coverage/cobertura/cobertura.xml
      - task: VSTest@2
        displayName: Run UI tests
        inputs:
          uiTests: true
          runInParallel: true
          codeCoverageEnabled: true
          runSettingsFile: bindings\tests\Capgemini.PowerApps.SpecFlowBindings.UiTests\CodeCoverage.runsettings
          testAssemblyVer2: |
            **\*UiTests.dll
            !**\*TestAdapter.dll
            !**\obj\**
          searchFolder: bindings\tests\Capgemini.PowerApps.SpecFlowBindings.UiTests
          rerunFailedTests: true
          rerunMaxAttempts: 2
        env:
          POWERAPPS_SPECFLOW_BINDINGS_TEST_TENANTID: $(Application User Tenant ID)
          POWERAPPS_SPECFLOW_BINDINGS_TEST_CLIENTID: $(Application User Client ID)
          POWERAPPS_SPECFLOW_BINDINGS_TEST_CLIENTSECRET: $(Application User Client Secret)
          POWERAPPS_SPECFLOW_BINDINGS_TEST_ADMIN_USERNAME: $(User ADO Integration Username)
          POWERAPPS_SPECFLOW_BINDINGS_TEST_ADMIN_PASSWORD: $(User ADO Integration Password)
          POWERAPPS_SPECFLOW_BINDINGS_TEST_URL: $(URL)  
      - task: SonarCloudAnalyze@1
        displayName: Analyse with SonarCloud
      - task: SonarCloudPublish@1
        displayName: Publish SonarCloud results
        inputs:
          pollingTimeoutSec: '300'
      - task: WhiteSource Bolt@20
        displayName: Detect security and licence issues
        inputs:
          cwd: '$(Build.SourcesDirectory)'
      - task: DotNetCoreCLI@2
        displayName: Pack NuGet package
        inputs:
          command: pack
          packagesToPack: bindings/src/**/*.csproj
          modifyOutputPath: true 
          versioningScheme: byEnvVar
          versionEnvVar: GitVersion.NuGetVersionV2
          includesymbols: false
          buildProperties: Configuration=$(buildConfiguration)
          packDirectory: $(Build.ArtifactStagingDirectory)/out
      - publish: $(Build.ArtifactStagingDirectory)/out
        displayName: Publish NuGet artifact
        artifact: Capgemini.PowerApps.SpecFlowBindings
